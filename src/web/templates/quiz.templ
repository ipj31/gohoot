package templates

import (
	"fmt"
	"github.com/ipj31/gohoot/internal/models"
)

templ Question(index int, question models.Question) {
	<div>
		<label for="question">Question</label>
		<input type="text" id="question" name="name" required value={ question.Question }/>
		// TODO decide how i want to handle new answers
		// TODO render answers in a select menu where the selected is the correct answer
	</div>
}

templ QuizEditor(quiz models.Quiz) {
	<form hx-post={ string(templ.URL(fmt.Sprintf("/quiz/%s", quiz.ID.Hex()))) } hx-swap="none" class="space-y-4">
		<div>
			<label for="name">Name</label>
			<input type="text" id="name" name="name" required value={ quiz.Name }/>
		</div>
		<div>
			<label for="description">Description</label>
			<input type="text" id="description" name="description" required value={ quiz.Description }/>
		</div>
		// TODO add quiz id to the endpoint
		<div>
			<button hx-get="/quiz/add-question">
				Add Question	
			</button>
		</div>
		<button type="submit">Save</button>
	</form>
}

templ Quiz(quiz models.Quiz) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>GoHoot! - Quiz Editor</title>
			<script src="https://cdn.tailwindcss.com"></script>
			<script src="https://unpkg.com/htmx.org@2.0.3" integrity="sha384-0895/pl2MU10Hqc6jd4RvrthNlDiE9U1tWmX7WRESftEDRosgxNsQG/Ze9YMRzHq" crossorigin="anonymous"></script>
		</head>
		<body>
			@QuizEditor(quiz)
		</body>
	</html>
}

templ UserQuizzes(quizzes []models.Quiz) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>GoHoot! - Your Quizzes</title>
			<script src="https://cdn.tailwindcss.com"></script>
			<script src="https://unpkg.com/htmx.org@2.0.3" integrity="sha384-0895/pl2MU10Hqc6jd4RvrthNlDiE9U1tWmX7WRESftEDRosgxNsQG/Ze9YMRzHq" crossorigin="anonymous"></script>
		</head>
		<body>
			<div class="flex space-x-3">
				if len(quizzes) != 0 {
					for _, quiz := range quizzes {
						if quiz.Name == "" {
							<a href={ templ.URL(fmt.Sprintf("/quiz/%s", quiz.ID.Hex())) } hx-boost="true">New Quiz</a>
						} else {
							<a href={ templ.URL(fmt.Sprintf("/quiz/%s", quiz.ID.Hex())) } hx-boost="true">{ quiz.Name }</a>
						}
					}
				} else {
					<div>No quizzes found!</div>
				}
				<a href="/quiz/new" hx-boost="true">Create a quiz</a>
			</div>
		</body>
	</html>
}
