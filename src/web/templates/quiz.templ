package templates

import (
	"fmt"
	"github.com/ipj31/gohoot/internal/models"
	"strconv"
)

templ Answer(answer string, isCorrect bool, questionIndex, answerIndex int) {
	<div class="flex items-center gap-2">
		<input type="radio" 
			   name={ fmt.Sprintf("question[%d].correct_answer", questionIndex) }
			   value={ strconv.Itoa(answerIndex) }
			   checked?={ isCorrect }/>
		<input type="text" 
			   name={ fmt.Sprintf("question[%d].answers[]", questionIndex) }
			   required 
			   value={ answer }/>
		<button type="button" 
				class="text-red-500"
				onclick="this.parentElement.remove()">
			Remove
		</button>
	</div>
}

templ Question(question models.Question, index int) {
	<fieldset class="p-4 mb-4 border rounded">
		<legend class="px-2 font-bold">Question { strconv.Itoa(index + 1) }</legend>
		
		<div class="mb-4">
			<label for={ fmt.Sprintf("question[%d].text", index) }>Question Text</label>
			<input type="text" 
				   id={ fmt.Sprintf("question[%d].text", index) }
				   name={ fmt.Sprintf("question[%d].text", index) }
				   required 
				   value={ question.Question }/>
		</div>

		<fieldset class="p-3 mb-4 border rounded">
			<legend class="px-2 text-sm">Answers</legend>
			<div class="space-y-2 answers-container">
				for i, answer := range question.Answers {
					@Answer(answer, answer == question.CorrectAnswer, index, i)
				}
			</div>
			<button type="button"
					class="mt-2"
					onclick="addAnswer(this.previousElementSibling, { index })">
				Add Answer
			</button>
		</fieldset>

		<button type="button" 
				class="text-red-500"
				onclick="this.closest('fieldset').remove()">
			Remove Question
		</button>
	</fieldset>
}

templ QuizEditor(quiz models.Quiz) {
	<form hx-post={ fmt.Sprintf("/quiz/%s", quiz.ID.Hex()) }
		  hx-swap="none"
		  class="space-y-4">
		<fieldset class="p-4 border rounded">
			<legend class="px-2 font-bold">Quiz Details</legend>
			
			<div class="mb-4">
				<label for="name">Quiz Name</label>
				<input type="text" id="name" name="name" required value={ quiz.Name }/>
			</div>
			
			<div>
				<label for="description">Description</label>
				<input type="text" id="description" name="description" required value={ quiz.Description }/>
			</div>
		</fieldset>

		<fieldset class="p-4 border rounded">
			<legend class="px-2 font-bold">Questions</legend>
			
			<div id="questions-container" class="space-y-4">
				for i, question := range quiz.Questions {
					@Question(question, i)
				}
			</div>
			
			<button type="button"
					class="mt-4"
					onclick="addQuestion()">
				Add Question
			</button>
		</fieldset>

		<button type="submit" class="px-4 py-2 text-white bg-blue-500 rounded">
			Save Quiz
		</button>
	</form>

	<script>
		function addAnswer(container, questionIndex) {
			const answerIndex = container.children.length;
			const newAnswer = `
				<div class="flex items-center gap-2">
					<input type="radio" 
						   name="question[${questionIndex}].correct_answer"
						   value="${answerIndex}">
					<input type="text" 
						   name="question[${questionIndex}].answers[]" 
						   required>
					<button type="button" 
							class="text-red-500" 
							onclick="this.parentElement.remove()">
						Remove
					</button>
				</div>
		 `;
			container.insertAdjacentHTML('beforeend', newAnswer);
		}

		function addQuestion() {
			const questionIndex = document.querySelectorAll('#questions-container > fieldset').length;
			const newQuestion = `
				<fieldset class="p-4 mb-4 border rounded">
					<legend class="px-2 font-bold">Question ${questionIndex + 1}</legend>
					
					<div class="mb-4">
						<label>Question Text</label>
						<input type="text" 
							   name="question[${questionIndex}].text" 
							   required>
					</div>

					<fieldset class="p-3 mb-4 border rounded">
						<legend class="px-2 text-sm">Answers</legend>
						<div class="space-y-2 answers-container">
							<!-- Initial answer -->
							<div class="flex items-center gap-2">
								<input type="radio" 
									   name="question[${questionIndex}].correct_answer"
									   value="0">
								<input type="text" 
									   name="question[${questionIndex}].answers[]" 
									   required>
								<button type="button" 
										class="text-red-500" 
										onclick="this.parentElement.remove()">
									Remove
								</button>
							</div>
						</div>
						<button type="button"
								class="mt-2"
								onclick="addAnswer(this.previousElementSibling, ${questionIndex})">
							Add Answer
						</button>
					</fieldset>

					<button type="button" 
							class="text-red-500"
							onclick="this.closest('fieldset').remove()">
						Remove Question
					</button>
				</fieldset>
		 `;
			document.getElementById('questions-container').insertAdjacentHTML('beforeend', newQuestion);
		}
	</script>
}

templ Quiz(quiz models.Quiz) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>GoHoot! - Quiz Editor</title>
			<script src="https://cdn.tailwindcss.com"></script>
			<script src="https://unpkg.com/htmx.org@2.0.3" integrity="sha384-0895/pl2MU10Hqc6jd4RvrthNlDiE9U1tWmX7WRESftEDRosgxNsQG/Ze9YMRzHq" crossorigin="anonymous"></script>
		</head>
		<body>
			@QuizEditor(quiz)
		</body>
	</html>
}

templ UserQuizzes(quizzes []models.Quiz) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>GoHoot! - Your Quizzes</title>
			<script src="https://cdn.tailwindcss.com"></script>
			<script src="https://unpkg.com/htmx.org@2.0.3" integrity="sha384-0895/pl2MU10Hqc6jd4RvrthNlDiE9U1tWmX7WRESftEDRosgxNsQG/Ze9YMRzHq" crossorigin="anonymous"></script>
		</head>
		<body>
			<div class="flex space-x-3">
				if len(quizzes) != 0 {
					for _, quiz := range quizzes {
						if quiz.Name == "" {
							<a href={ templ.URL(fmt.Sprintf("/quiz/%s", quiz.ID.Hex())) } hx-boost="true">New Quiz</a>
						} else {
							<a href={ templ.URL(fmt.Sprintf("/quiz/%s", quiz.ID.Hex())) } hx-boost="true">{ quiz.Name }</a>
						}
					}
				} else {
					<div>No quizzes found!</div>
				}
				<a href="/quiz/new" hx-boost="true">Create a quiz</a>
			</div>
		</body>
	</html>
}
